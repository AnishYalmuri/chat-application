[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAccountsClient = Package['accounts-base'].AccountsClient;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n    \", HTML.HEADER(\"\\n\t  \", HTML.H1(\"Chat (\", Blaze.View(\"lookup:incompleteCount\", function() {\n    return Spacebars.mustache(view.lookup(\"incompleteCount\"));\n  }), \")\"), \"\\n\t  \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n\t  \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ \"\\n\t  \", HTML.FORM({\n      \"class\": \"new-task\"\n    }, \"\\n        \", HTML.INPUT({\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Type to add new tasks\"\n    }), \"\\n      \"), \"\\n\t  \" ];\n  }), \"\\n    \"), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ \"\\n    \", HTML.UL(\"\\n      \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"tasks\"));\n    }, function() {\n      return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"task\")), \"\\n      \" ];\n    }), \"\\n    \"), \"\\n\t\" ];\n  }), \"\\n  \");\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"task\");\nTemplate[\"task\"] = new Template(\"Template.task\", (function() {\n  var view = this;\n  return HTML.LI({\n    \"class\": function() {\n      return Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"checked\"));\n      }, function() {\n        return \"checked\";\n      });\n    }\n  }, HTML.Raw('\\n    <button class=\"delete\">&times;</button>\\n     '), HTML.SPAN({\n    \"class\": \"text\"\n  }, HTML.STRONG(Blaze.View(\"lookup:username\", function() {\n    return Spacebars.mustache(view.lookup(\"username\"));\n  })), \" - \", Blaze.View(\"lookup:text\", function() {\n    return Spacebars.mustache(view.lookup(\"text\"));\n  })), \"\\n  \");\n}));\n\n}).call(this);\n","servePath":"/template.chat_app.js","sourceMap":{"version":3,"sources":["/template.chat_app.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/template.chat_app.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n    \", HTML.HEADER(\"\\n\t  \", HTML.H1(\"Chat (\", Blaze.View(\"lookup:incompleteCount\", function() {\n    return Spacebars.mustache(view.lookup(\"incompleteCount\"));\n  }), \")\"), \"\\n\t  \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n\t  \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ \"\\n\t  \", HTML.FORM({\n      \"class\": \"new-task\"\n    }, \"\\n        \", HTML.INPUT({\n      type: \"text\",\n      name: \"text\",\n      placeholder: \"Type to add new tasks\"\n    }), \"\\n      \"), \"\\n\t  \" ];\n  }), \"\\n    \"), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ \"\\n    \", HTML.UL(\"\\n      \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"tasks\"));\n    }, function() {\n      return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"task\")), \"\\n      \" ];\n    }), \"\\n    \"), \"\\n\t\" ];\n  }), \"\\n  \");\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"task\");\nTemplate[\"task\"] = new Template(\"Template.task\", (function() {\n  var view = this;\n  return HTML.LI({\n    \"class\": function() {\n      return Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"checked\"));\n      }, function() {\n        return \"checked\";\n      });\n    }\n  }, HTML.Raw('\\n    <button class=\"delete\">&times;</button>\\n     '), HTML.SPAN({\n    \"class\": \"text\"\n  }, HTML.STRONG(Blaze.View(\"lookup:username\", function() {\n    return Spacebars.mustache(view.lookup(\"username\"));\n  })), \" - \", Blaze.View(\"lookup:text\", function() {\n    return Spacebars.mustache(view.lookup(\"text\"));\n  })), \"\\n  \");\n}));\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// chat_app.js                                                         //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nTasks = new Mongo.Collection(\"chats\");                                 // 1\n                                                                       //\nif (Meteor.isClient) {                                                 // 3\n  // This code only runs on the client                                 //\n  Template.body.helpers({                                              // 5\n    tasks: function () {                                               // 6\n      return Tasks.find({});                                           // 7\n    },                                                                 //\n    incompleteCount: function () {                                     // 9\n      return Tasks.find().count();                                     // 10\n    }                                                                  //\n  });                                                                  //\n  Template.body.events({                                               // 13\n    \"submit .new-task\": function (event) {                             // 14\n      // Prevent default browser form submit                           //\n      event.preventDefault();                                          // 16\n                                                                       //\n      // Get value from form element                                   //\n      var text = event.target.text.value;                              // 19\n                                                                       //\n      // Insert a task into the collection                             //\n      Tasks.insert({                                                   // 22\n        text: text,                                                    // 23\n        createdAt: new Date(), // current time                         // 24\n        owner: Meteor.userId(), // _id of logged in user               // 25\n        username: Meteor.user().profile.name // username of logged in user\n      });                                                              //\n                                                                       //\n      // Clear form                                                    //\n      event.target.text.value = \"\";                                    // 30\n    }                                                                  //\n  });                                                                  //\n  Template.task.events({                                               // 33\n                                                                       //\n    \"click .delete\": function () {                                     // 35\n      Tasks.remove(this._id);                                          // 36\n    }                                                                  //\n                                                                       //\n  });                                                                  //\n  Accounts.ui.config({                                                 // 41\n    passwordSignupFields: \"USERNAME_ONLY\"                              // 42\n  });                                                                  //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/chat_app.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/chat_app.js"],"names":[],"mappings":";;;;;;;;AAAA,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;;AAEtC,IAAI,MAAM,CAAC,QAAQ,EAAE;;AAEnB,UAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AACpB,SAAK,EAAE,YAAY;AACjB,aAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACvB;AACJ,mBAAe,EAAE,YAAY;AACxB,aAAO,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;KAC7B;GACF,CAAC,CAAC;AACH,UAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;AACnB,sBAAkB,EAAE,UAAU,KAAK,EAAE;;AAEnC,WAAK,CAAC,cAAc,EAAE,CAAC;;;AAGvB,UAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;;;AAGnC,WAAK,CAAC,MAAM,CAAC;AACX,YAAI,EAAE,IAAI;AACV,iBAAS,EAAE,IAAI,IAAI,EAAE;AACrB,aAAK,EAAE,MAAM,CAAC,MAAM,EAAE;AACtB,gBAAQ,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI;OACrC,CAAC,CAAC;;;AAGH,WAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KAC9B;GACF,CAAC,CAAC;AACF,UAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;;AAEpB,mBAAe,EAAE,YAAY;AAC3B,WAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACxB;;GAGF,CAAC,CAAC;AACH,UAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;AACjB,wBAAoB,EAAE,eAAe;GACtC,CAAC,CAAC;CACJ,wE","file":"/chat_app.js","sourcesContent":["Tasks = new Mongo.Collection(\"chats\");\n \nif (Meteor.isClient) {\n  // This code only runs on the client\n  Template.body.helpers({\n    tasks: function () {\n      return Tasks.find({});\n    },\n\tincompleteCount: function () {\n      return Tasks.find().count();\n    }\n  });\n  Template.body.events({\n    \"submit .new-task\": function (event) {\n      // Prevent default browser form submit\n      event.preventDefault();\n \n      // Get value from form element\n      var text = event.target.text.value;\n      \n      // Insert a task into the collection\n      Tasks.insert({\n        text: text,\n        createdAt: new Date(),            // current time\n        owner: Meteor.userId(),           // _id of logged in user\n        username: Meteor.user().profile.name  // username of logged in user\n      });\n \n      // Clear form\n      event.target.text.value = \"\";\n    }\n  });\n   Template.task.events({\n    \n    \"click .delete\": function () {\n      Tasks.remove(this._id);\n    },\n\t\n\t\n  });\n  Accounts.ui.config({\n    passwordSignupFields: \"USERNAME_ONLY\"\n  });\n}"]}}]